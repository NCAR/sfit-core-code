# prepspec.input
# input file for prepspec.f90
# prepspec loops through this file and creates an ascii
# file with a block for each spectrum that will be fit
# Latitude of Observation [+N, 90 - -90]
80.05
# Longitude of Observation[+E, 0 - 360]
86.42
# Altitude of Observation [masl]
610
#
# outputflag and verbose flag
# oflag  - output
#     ! = 1 output t15asc file
#     ! = 2 bnr file
#     ! = 3 both
#
# vflag  - verbosity
#     ! = 0 no output from baseline correct or s bnr or block output for plotting
#     ! = 1 verbose output from bc and zeroed bnr but no blockout
#     ! = 2 verbose, zeroed bnr and blockout for plotting
1   2
# filter bands and regions for calculating SNR
7
f1  4038.727 4038.871
f2  3381.155 3381.536
f3  2924.866 2925.100
f4  2526.228 2526.618
f5  1985.260 1985.510
f6  1139.075 1139.168
f8  907.854  907.977
#
# number of data blocks in the output ascii file
# = [# binary formatted spectra] X [# fit regions] (often but not necessarily)
1
# each block contains:
# bnr spectra file name
# roe, nterp, rflag, fflag, zflag
# radius of earth  : km latitude and solar azimuth dependent from ckopus
# zero fill factor : interpolate extra points in spectra (2 is nice)
#   ! nterp  - interpolation
#     ! = 0 no interpolation of points
#     ! = N interpolate xN points
# ratioflag        : ratio with the filter bandpass envelope for instance
# fflag            : = 0 unformatted bnr (FORTRAN)
# fflag            : = 1 unformatted & stream flag (C)
# zflag            :
#   !     = 0 no zero offset,
#   !     = 0 < zflag < 1, use this value for baselincorrect,
#   !     = 1 use combo 2 + 4 for 10µ region, calculate noise in the small region (standard method)
#   !     = 2 use combo 2 + 4 for 10µ region calculate noise as the rms noise from the zero
#   !        (allsatspec) vector - by definition random around zero
# ratio file name (bnr format) if ratioflag eq 1, skip if 0
/net/glacier/data/1/fts/eur_bruker/mir/bnr/F2/100316F2.S4.bnr
6357.42    2    0
